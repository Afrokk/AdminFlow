// User/Team Management System Database Schema

Table user {
  id serial [pk, increment]
  name varchar(255) [not null]
  email varchar(255) [not null, unique]
  university varchar(255) [not null]
  preferred_username varchar(100) [not null, unique]
  github_id varchar(100) [unique]
  slack_id varchar(100) [unique]
  phone_number varchar(20)
  status varchar(20) [not null, default: 'pending', note: 'pending, active, inactive']
  last_info_update timestamp
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    email
    preferred_username
    status
    github_id
  }
}

Table teams {
  id serial [pk, increment]
  name varchar(255) [not null]
  description text
  is_public boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    name
    is_public
  }
}

Table user_teams {
  user_id integer [ref: > user.id, not null]
  team_id integer [ref: > teams.id, not null]
  role varchar(50) [not null, note: 'developer, researcher, analyst, etc. (functional role, NOT permissions)']
  joined_at timestamp [default: `now()`]
  
  indexes {
    (user_id, team_id) [pk]
    team_id
  }
}

Table approval_requests {
  id serial [pk, increment]
  request_type varchar(50) [not null, note: 'new_user, update, team_change']
  user_id integer [ref: > user.id, not null]
  requested_data jsonb [not null, note: 'Stores form data']
  status varchar(20) [not null, default: 'pending', note: 'pending, approved, rejected']
  admin_notes text
  approved_by integer [ref: > user.id]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    user_id
    status
    approved_by
  }
}

Table admins {
  user_id integer [pk, ref: > user.id]
  role varchar(50) [not null, default: 'admin', note: 'admin, super_admin']
  created_at timestamp [default: `now()`]
}

Table audit_logs {
  id serial [pk, increment]
  action varchar(100) [not null]
  entity_type varchar(50) [not null, note: 'user, teams, etc.']
  entity_id integer [not null]
  performed_by integer [ref: > user.id]
  details jsonb
  created_at timestamp [default: `now()`]
  
  indexes {
    entity_type
    entity_id
    performed_by
    created_at
  }
}

Table email_logs {
  id serial [pk, increment]
  user_id integer [ref: > user.id, not null]
  email_type varchar(50) [not null, note: 'registration, approval, yearly_update, etc.']
  sent_at timestamp [default: `now()`]
  success boolean [not null, default: true]
  
  indexes {
    user_id
    email_type
    sent_at
  }
}

Ref: user_teams.user_id > user.id [delete: cascade]
Ref: user_teams.team_id > teams.id [delete: cascade]
Ref: approval_requests.user_id > user.id [delete: cascade]
Ref: email_logs.user_id > user.id [delete: cascade]
Ref: admins.user_id > user.id [delete: cascade]
